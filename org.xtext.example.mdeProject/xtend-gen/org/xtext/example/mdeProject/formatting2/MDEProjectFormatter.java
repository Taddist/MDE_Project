/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mdeProject.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import mDE_Project.Add;
import mDE_Project.Keyword;
import mDE_Project.Load;
import mDE_Project.QueryExpression;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mdeProject.services.MDEProjectGrammarAccess;

@SuppressWarnings("all")
public class MDEProjectFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MDEProjectGrammarAccess _mDEProjectGrammarAccess;
  
  protected void _format(final Load load, @Extension final IFormattableDocument document) {
    EList<QueryExpression> _actions = load.getActions();
    for (final QueryExpression queryExpression : _actions) {
      document.<QueryExpression>format(queryExpression);
    }
  }
  
  protected void _format(final Add add, @Extension final IFormattableDocument document) {
    document.<Keyword>format(add.getSpecification());
  }
  
  public void format(final Object add, final IFormattableDocument document) {
    if (add instanceof XtextResource) {
      _format((XtextResource)add, document);
      return;
    } else if (add instanceof Add) {
      _format((Add)add, document);
      return;
    } else if (add instanceof Load) {
      _format((Load)add, document);
      return;
    } else if (add instanceof EObject) {
      _format((EObject)add, document);
      return;
    } else if (add == null) {
      _format((Void)null, document);
      return;
    } else if (add != null) {
      _format(add, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(add, document).toString());
    }
  }
}
