/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mdeProject.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MDEProjectGrammarAccess extends AbstractGrammarElementFinder {
	
	public class LoadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Load");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cDoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionsQueryExpressionParserRuleCall_4_0 = (RuleCall)cActionsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cActionsQueryExpressionParserRuleCall_5_1_0 = (RuleCall)cActionsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Load:
		//	'Load'
		//	name=EString
		//	'Do' '{' actions+=QueryExpression (";" actions+=QueryExpression)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Load' name=EString 'Do' '{' actions+=QueryExpression (";" actions+=QueryExpression)* '}'
		public Group getGroup() { return cGroup; }
		
		//'Load'
		public Keyword getLoadKeyword_0() { return cLoadKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'Do'
		public Keyword getDoKeyword_2() { return cDoKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//actions+=QueryExpression
		public Assignment getActionsAssignment_4() { return cActionsAssignment_4; }
		
		//QueryExpression
		public RuleCall getActionsQueryExpressionParserRuleCall_4_0() { return cActionsQueryExpressionParserRuleCall_4_0; }
		
		//(";" actions+=QueryExpression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//";"
		public Keyword getSemicolonKeyword_5_0() { return cSemicolonKeyword_5_0; }
		
		//actions+=QueryExpression
		public Assignment getActionsAssignment_5_1() { return cActionsAssignment_5_1; }
		
		//QueryExpression
		public RuleCall getActionsQueryExpressionParserRuleCall_5_1_0() { return cActionsQueryExpressionParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class QueryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.QueryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeleteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cModifyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QueryExpression:
		//	Add | Delete | Modify;
		@Override public ParserRule getRule() { return rule; }
		
		//Add | Delete | Modify
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Add
		public RuleCall getAddParserRuleCall_0() { return cAddParserRuleCall_0; }
		
		//Delete
		public RuleCall getDeleteParserRuleCall_1() { return cDeleteParserRuleCall_1; }
		
		//Modify
		public RuleCall getModifyParserRuleCall_2() { return cModifyParserRuleCall_2; }
	}
	public class KeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Keyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEclassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEattributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Keyword:
		//	Eclass | Eattribute;
		@Override public ParserRule getRule() { return rule; }
		
		//Eclass | Eattribute
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Eclass
		public RuleCall getEclassParserRuleCall_0() { return cEclassParserRuleCall_0; }
		
		//Eattribute
		public RuleCall getEattributeParserRuleCall_1() { return cEattributeParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Add");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSpecificationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSpecificationKeywordParserRuleCall_1_0 = (RuleCall)cSpecificationAssignment_1.eContents().get(0);
		
		//Add:
		//	'Add'
		//	specification=Keyword;
		@Override public ParserRule getRule() { return rule; }
		
		//'Add' specification=Keyword
		public Group getGroup() { return cGroup; }
		
		//'Add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//specification=Keyword
		public Assignment getSpecificationAssignment_1() { return cSpecificationAssignment_1; }
		
		//Keyword
		public RuleCall getSpecificationKeywordParserRuleCall_1_0() { return cSpecificationKeywordParserRuleCall_1_0; }
	}
	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSpecificationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSpecificationKeywordParserRuleCall_1_0 = (RuleCall)cSpecificationAssignment_1.eContents().get(0);
		
		//Delete:
		//	'Delete'
		//	specification=Keyword;
		@Override public ParserRule getRule() { return rule; }
		
		//'Delete' specification=Keyword
		public Group getGroup() { return cGroup; }
		
		//'Delete'
		public Keyword getDeleteKeyword_0() { return cDeleteKeyword_0; }
		
		//specification=Keyword
		public Assignment getSpecificationAssignment_1() { return cSpecificationAssignment_1; }
		
		//Keyword
		public RuleCall getSpecificationKeywordParserRuleCall_1_0() { return cSpecificationKeywordParserRuleCall_1_0; }
	}
	public class ModifyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Modify");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModifyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSpecificationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSpecificationKeywordParserRuleCall_1_0 = (RuleCall)cSpecificationAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNewValueNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNewValueNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNewValueNameEStringParserRuleCall_2_1_0 = (RuleCall)cNewValueNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNewValueTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNewValueTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNewValueTypeEStringParserRuleCall_3_1_0 = (RuleCall)cNewValueTypeAssignment_3_1.eContents().get(0);
		
		//Modify:
		//	'Modify'
		//	specification=Keyword ('newValueName' newValueName=EString)? ('newValueType' newValueType=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Modify' specification=Keyword ('newValueName' newValueName=EString)? ('newValueType' newValueType=EString)?
		public Group getGroup() { return cGroup; }
		
		//'Modify'
		public Keyword getModifyKeyword_0() { return cModifyKeyword_0; }
		
		//specification=Keyword
		public Assignment getSpecificationAssignment_1() { return cSpecificationAssignment_1; }
		
		//Keyword
		public RuleCall getSpecificationKeywordParserRuleCall_1_0() { return cSpecificationKeywordParserRuleCall_1_0; }
		
		//('newValueName' newValueName=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'newValueName'
		public Keyword getNewValueNameKeyword_2_0() { return cNewValueNameKeyword_2_0; }
		
		//newValueName=EString
		public Assignment getNewValueNameAssignment_2_1() { return cNewValueNameAssignment_2_1; }
		
		//EString
		public RuleCall getNewValueNameEStringParserRuleCall_2_1_0() { return cNewValueNameEStringParserRuleCall_2_1_0; }
		
		//('newValueType' newValueType=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'newValueType'
		public Keyword getNewValueTypeKeyword_3_0() { return cNewValueTypeKeyword_3_0; }
		
		//newValueType=EString
		public Assignment getNewValueTypeAssignment_3_1() { return cNewValueTypeAssignment_3_1; }
		
		//EString
		public RuleCall getNewValueTypeEStringParserRuleCall_3_1_0() { return cNewValueTypeEStringParserRuleCall_3_1_0; }
	}
	public class EclassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Eclass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEclassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEclassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cRelatedToKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cRelatedToAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cRelatedToEStringParserRuleCall_4_1_1_0 = (RuleCall)cRelatedToAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cBoundEclassKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cBoundEclassAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cBoundEclassEStringParserRuleCall_4_2_1_0 = (RuleCall)cBoundEclassAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cBoundRelatedToKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cBoundRelatedToAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cBoundRelatedToEStringParserRuleCall_4_3_1_0 = (RuleCall)cBoundRelatedToAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cGroup_4.eContents().get(4);
		private final Keyword cTypeRelationKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Assignment cTypeRelationAssignment_4_4_1 = (Assignment)cGroup_4_4.eContents().get(1);
		private final RuleCall cTypeRelationEStringParserRuleCall_4_4_1_0 = (RuleCall)cTypeRelationAssignment_4_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cColumnsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cColumnsEattributeParserRuleCall_5_1_0 = (RuleCall)cColumnsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cColumnsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cColumnsEattributeParserRuleCall_5_2_1_0 = (RuleCall)cColumnsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//Eclass:
		//	{Eclass}
		//	'Eclass'
		//	name=EString (':' type=EString)? ('[' ('relatedTo' relatedTo=EString)? ('boundEclass' boundEclass=EString)?
		//	('boundRelatedTo' boundRelatedTo=EString)? ('typeRelation' typeRelation=EString)?
		//	']')? ('(' columns+=Eattribute ("," columns+=Eattribute)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Eclass} 'Eclass' name=EString (':' type=EString)? ('[' ('relatedTo' relatedTo=EString)? ('boundEclass'
		//boundEclass=EString)? ('boundRelatedTo' boundRelatedTo=EString)? ('typeRelation' typeRelation=EString)? ']')? ('('
		//columns+=Eattribute ("," columns+=Eattribute)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{Eclass}
		public Action getEclassAction_0() { return cEclassAction_0; }
		
		//'Eclass'
		public Keyword getEclassKeyword_1() { return cEclassKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(':' type=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//type=EString
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_3_1_0() { return cTypeEStringParserRuleCall_3_1_0; }
		
		//('[' ('relatedTo' relatedTo=EString)? ('boundEclass' boundEclass=EString)? ('boundRelatedTo' boundRelatedTo=EString)?
		//('typeRelation' typeRelation=EString)? ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//('relatedTo' relatedTo=EString)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'relatedTo'
		public Keyword getRelatedToKeyword_4_1_0() { return cRelatedToKeyword_4_1_0; }
		
		//relatedTo=EString
		public Assignment getRelatedToAssignment_4_1_1() { return cRelatedToAssignment_4_1_1; }
		
		//EString
		public RuleCall getRelatedToEStringParserRuleCall_4_1_1_0() { return cRelatedToEStringParserRuleCall_4_1_1_0; }
		
		//('boundEclass' boundEclass=EString)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'boundEclass'
		public Keyword getBoundEclassKeyword_4_2_0() { return cBoundEclassKeyword_4_2_0; }
		
		//boundEclass=EString
		public Assignment getBoundEclassAssignment_4_2_1() { return cBoundEclassAssignment_4_2_1; }
		
		//EString
		public RuleCall getBoundEclassEStringParserRuleCall_4_2_1_0() { return cBoundEclassEStringParserRuleCall_4_2_1_0; }
		
		//('boundRelatedTo' boundRelatedTo=EString)?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'boundRelatedTo'
		public Keyword getBoundRelatedToKeyword_4_3_0() { return cBoundRelatedToKeyword_4_3_0; }
		
		//boundRelatedTo=EString
		public Assignment getBoundRelatedToAssignment_4_3_1() { return cBoundRelatedToAssignment_4_3_1; }
		
		//EString
		public RuleCall getBoundRelatedToEStringParserRuleCall_4_3_1_0() { return cBoundRelatedToEStringParserRuleCall_4_3_1_0; }
		
		//('typeRelation' typeRelation=EString)?
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'typeRelation'
		public Keyword getTypeRelationKeyword_4_4_0() { return cTypeRelationKeyword_4_4_0; }
		
		//typeRelation=EString
		public Assignment getTypeRelationAssignment_4_4_1() { return cTypeRelationAssignment_4_4_1; }
		
		//EString
		public RuleCall getTypeRelationEStringParserRuleCall_4_4_1_0() { return cTypeRelationEStringParserRuleCall_4_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_5() { return cRightSquareBracketKeyword_4_5; }
		
		//('(' columns+=Eattribute ("," columns+=Eattribute)* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }
		
		//columns+=Eattribute
		public Assignment getColumnsAssignment_5_1() { return cColumnsAssignment_5_1; }
		
		//Eattribute
		public RuleCall getColumnsEattributeParserRuleCall_5_1_0() { return cColumnsEattributeParserRuleCall_5_1_0; }
		
		//("," columns+=Eattribute)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//columns+=Eattribute
		public Assignment getColumnsAssignment_5_2_1() { return cColumnsAssignment_5_2_1; }
		
		//Eattribute
		public RuleCall getColumnsEattributeParserRuleCall_5_2_1_0() { return cColumnsEattributeParserRuleCall_5_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_3() { return cRightParenthesisKeyword_5_3; }
	}
	public class EattributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mdeProject.MDEProject.Eattribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEattributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEattributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFromAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFromEStringParserRuleCall_3_1_0 = (RuleCall)cFromAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		
		//Eattribute:
		//	{Eattribute}
		//	'Eattribute'
		//	name=EString ('from' from=EString)? ('type' type=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Eattribute} 'Eattribute' name=EString ('from' from=EString)? ('type' type=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Eattribute}
		public Action getEattributeAction_0() { return cEattributeAction_0; }
		
		//'Eattribute'
		public Keyword getEattributeKeyword_1() { return cEattributeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('from' from=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'from'
		public Keyword getFromKeyword_3_0() { return cFromKeyword_3_0; }
		
		//from=EString
		public Assignment getFromAssignment_3_1() { return cFromAssignment_3_1; }
		
		//EString
		public RuleCall getFromEStringParserRuleCall_3_1_0() { return cFromEStringParserRuleCall_3_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=EString
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_4_1_0() { return cTypeEStringParserRuleCall_4_1_0; }
	}
	
	
	private final LoadElements pLoad;
	private final QueryExpressionElements pQueryExpression;
	private final KeywordElements pKeyword;
	private final EStringElements pEString;
	private final AddElements pAdd;
	private final DeleteElements pDelete;
	private final ModifyElements pModify;
	private final EclassElements pEclass;
	private final EattributeElements pEattribute;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MDEProjectGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLoad = new LoadElements();
		this.pQueryExpression = new QueryExpressionElements();
		this.pKeyword = new KeywordElements();
		this.pEString = new EStringElements();
		this.pAdd = new AddElements();
		this.pDelete = new DeleteElements();
		this.pModify = new ModifyElements();
		this.pEclass = new EclassElements();
		this.pEattribute = new EattributeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mdeProject.MDEProject".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Load:
	//	'Load'
	//	name=EString
	//	'Do' '{' actions+=QueryExpression (";" actions+=QueryExpression)* '}';
	public LoadElements getLoadAccess() {
		return pLoad;
	}
	
	public ParserRule getLoadRule() {
		return getLoadAccess().getRule();
	}
	
	//QueryExpression:
	//	Add | Delete | Modify;
	public QueryExpressionElements getQueryExpressionAccess() {
		return pQueryExpression;
	}
	
	public ParserRule getQueryExpressionRule() {
		return getQueryExpressionAccess().getRule();
	}
	
	//Keyword:
	//	Eclass | Eattribute;
	public KeywordElements getKeywordAccess() {
		return pKeyword;
	}
	
	public ParserRule getKeywordRule() {
		return getKeywordAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Add:
	//	'Add'
	//	specification=Keyword;
	public AddElements getAddAccess() {
		return pAdd;
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}
	
	//Delete:
	//	'Delete'
	//	specification=Keyword;
	public DeleteElements getDeleteAccess() {
		return pDelete;
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}
	
	//Modify:
	//	'Modify'
	//	specification=Keyword ('newValueName' newValueName=EString)? ('newValueType' newValueType=EString)?;
	public ModifyElements getModifyAccess() {
		return pModify;
	}
	
	public ParserRule getModifyRule() {
		return getModifyAccess().getRule();
	}
	
	//Eclass:
	//	{Eclass}
	//	'Eclass'
	//	name=EString (':' type=EString)? ('[' ('relatedTo' relatedTo=EString)? ('boundEclass' boundEclass=EString)?
	//	('boundRelatedTo' boundRelatedTo=EString)? ('typeRelation' typeRelation=EString)?
	//	']')? ('(' columns+=Eattribute ("," columns+=Eattribute)* ')')?;
	public EclassElements getEclassAccess() {
		return pEclass;
	}
	
	public ParserRule getEclassRule() {
		return getEclassAccess().getRule();
	}
	
	//Eattribute:
	//	{Eattribute}
	//	'Eattribute'
	//	name=EString ('from' from=EString)? ('type' type=EString)?;
	public EattributeElements getEattributeAccess() {
		return pEattribute;
	}
	
	public ParserRule getEattributeRule() {
		return getEattributeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
